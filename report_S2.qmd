---
title: "Supplementary Report S2. Report with ASV without OTU post-clustering. Terroir and farming practices drive arbuscular mycorrhizal fungal communities in French vineyard."
format:
  html:   
    page-layout: full
    theme: 
      - flatly
    dark: darkly
    fontsize: 0.9em
    code-fold: true
    toc: true
    embed-resources: true
    toc-depth: 5
execute: 
  cache: false
---

```{r}
knitr::opts_chunk$set(
  message = FALSE
)
```


```{r}
#if (!require("devtools", quietly = TRUE)) {
#  install.packages("devtools")
#}
#devtools::install_github("adrientaudiere/MiscMetabar")
```


```{r}
#| message: false
library(MiscMetabar)
library(targets)

library(metacoder)
library(DT)
library(knitr)
library(ggplot2)
library(patchwork)
library(vegan)
library(FactoMineR)
library(factoextra)
library(DESeq2)
library(indicspecies)
library(sf)
library(adespatial)
library(ade4)
library(adegraphics)
library(kableExtra)
library(formattable)
library(microbiomeMarker)
library(ComplexUpset)
```

```{r}
d <- tar_read(d_blast)
```

```{r}
#| include: false
d <- clean_pq(d, verbose = TRUE, force_taxa_as_columns = TRUE)
taxa_names(d) <- paste0("OTU_", seq_along(taxa_names(d)))
```

## Metadata modification

```{r}
d@sam_data$rank <- gsub("Weeding", "Grassing", d@sam_data$rank)
d@sam_data$inter_rank <- gsub("Weeding", "Grassing", d@sam_data$inter_rank)
d@sam_data$soil_practice <- gsub("Weeding", "Grassing", d@sam_data$soil_practice)

d@sam_data$terroir <- gsub("Perrier", "Vergèze", d@sam_data$terroir)
```

### Spores number

```{r}
d@sam_data$nb_spores <- rowMeans(cbind(as.numeric(d@sam_data$spores_rep1), as.numeric(d@sam_data$spores_rep2),as.numeric(d@sam_data$spores_rep3)),na.rm=TRUE)
```

### Practices

```{r}
d@sam_data$organic <- ifelse(!d@sam_data$practice %in%
  c("Conventional", "Conversion"),
"Organic", "NonOrganic"
)
```

### Paired samples (roots, spores from the same samples)

```{r}
d@sam_data$paired_name <-
  apply(as.matrix(d@sam_data[, c(5:16)]), 1, paste,
    collapse = "--"
  )
d@sam_data$paired_name[d@sam_data$terroir == "Vergèze"] <-
  gsub("R", "", d@sam_data$ref_mycea[d@sam_data$terroir == "Vergèze"])
```

```{r}
tib_sam_data <- as_tibble(d@sam_data) %>%
  mutate(across(starts_with("Myc_freq"), as.numeric)) %>%
  mutate(across(starts_with("Myc_intensity_colonization"), as.numeric)) %>%
  mutate(across(starts_with("Myc_intensity_root"), as.numeric)) %>%
  mutate(across(starts_with("Arbuscul_richness"), as.numeric)) %>%
  mutate(across(starts_with("Arbuscul_abundance"), as.numeric)) %>%
  mutate(across(starts_with("Vesicle_richness"), as.numeric)) %>%
  mutate(across(starts_with("Vesicle_abundance"), as.numeric)) %>%
  mutate(Myc_freq = rowMeans(select(., starts_with("Myc_freq")), na.rm = TRUE)) %>%
  mutate(Myc_intensity_colonization = rowMeans(select(
    ., starts_with("Myc_intensity_colonization")
  ), na.rm = TRUE)) %>%
  mutate(Myc_intensity_root = rowMeans(select(., starts_with(
    "Myc_intensity_root"
  )), na.rm = TRUE)) %>%
  mutate(Arbuscul_richness = rowMeans(select(., starts_with(
    "Arbuscul_richness"
  )), na.rm = TRUE)) %>%
  mutate(Arbuscul_abundance = rowMeans(select(., starts_with(
    "Arbuscul_abundance"
  )), na.rm = TRUE)) %>%
  mutate(Vesicle_richness = rowMeans(
    select(., starts_with(
      "Vesicle_richness"
    )),
    na.rm = TRUE
  )) %>%
  mutate(Vesicle_abundance = rowMeans(
    select(., starts_with(
      "Vesicle_abundance"
    )),
    na.rm = TRUE
  )) %>% tibble::column_to_rownames(var = "X")

sample_data(d) <- tib_sam_data
```

## Exclude Mycelium

```{r}
d <- clean_pq(subset_samples(d, compartment != "Mycelium"))
d_vs <- clean_pq(subset_samples(tar_read(d_vs), compartment != "Mycelium"))
```

## Summary of final dataset

```{r}
summary_plot_pq(d) +
  labs(title = "Summary of final dataset") +
  theme(plot.title = element_text(hjust = 0.5, size = 20, color = "#1e2b4c"))
```

## Summary of bioinformatics pipeline

### Global summary

```{r, results='asis'}
kable(tar_read(track_sequences_samples_clusters))
```


# SUBSETING AND FILTERING DATASET

```{r}
d_muco <- clean_pq(subset_taxa(d, Class_PR2 == "Mucoromycota"))
d_blast <- clean_pq(subset_taxa(tar_read(d_blast), Class_PR2 == "Mucoromycota"))
```

```{r}
for(i in c(19:46)){
  d_muco@sam_data[,i] <- as.numeric(unlist(d_muco@sam_data[,i]))
}
```

```{r}
d_roots <- clean_pq(subset_samples(d_muco, compartment == "Roots"))
d_spores <- clean_pq(subset_samples(d_muco, compartment == "Spores"))
```

```{r}
d_rs_merged_samples <- clean_pq(merge_samples2(
  d_muco,
  "paired_name",
  default_fun = 
    function(x){MiscMetabar::diff_fct_diff_class(x, na.rm = T)}
))
```

```{r}
d_rs <- clean_pq(subset_samples_pq(
    d_rs_merged_samples,
    sample_sums(d_rs_merged_samples) > 2000
  ))
```

# TAXONOMICAL ANALYSES

```{r}
# Figure S8
multitax_bar_pq(d_vs, "Supergroup_PR2",
  "Subdivision_PR2", "Class_PR2",
  nb_seq = TRUE
) +
  ggtitle("Number of sequences (log10) including non-Mucoromycota")
```

### Number of sequences

```{r}
# Figure S6
dir.create("output/krona")
krona(
  d_vs,
  ranks = c(11:19),
  "output/krona/OTU_post_clustered_allEuk",
  name = "OTU_post_clustered_allEuk"
)
krona(
  d,
  ranks = c(11:19),
  "output/krona/OTU_filtOnMaarjam_AM",
  name = "OTU_filtOnMaarjam_AM"
)
krona(
  d_muco,
  ranks = c(11:19),
  "output/krona/OTU_filtOnMaarjamAndPr2_AM",
  name = "OTU_filtOnMaarjamAndPr2_AM"
)
merge_krona(
  c(
    "output/krona/OTU_post_clustered_allEuk",
    "output/krona/OTU_filtOnMaarjam_AM",
    "output/krona/OTU_filtOnMaarjamAndPr2_AM"
  ),
  "output/krona/Euk_to_AM_filtering_nb_seq.html"
)
```

### Number of OTU

```{r}
# Figure S7
krona(
  d_vs,
  ranks = c(11:19),
  "output/krona/OTU_post_clustered_allEuk_Nbotu",
      name = "OTU_post_clustered_allEuk",
  nb_seq = F
)
krona(
  d,
  ranks = c(11:19),
  "output/krona/OTU_filtOnMaarjam_AM_Nbotu",
    name = "OTU_filtOnMaarjam_AM",
  nb_seq = F
)
krona(
  d_muco,
  ranks = c(11:19),
  "output/krona/OTU_filtOnMaarjamAndPr2_AM_Nbotu",
  name = "OTU_filtOnMaarjamAndPr2_AM",
  nb_seq = F
)
merge_krona(
  c(
    "output/krona/OTU_post_clustered_allEuk_Nbotu",
    "output/krona/OTU_filtOnMaarjam_AM_Nbotu",
    "output/krona/OTU_filtOnMaarjamAndPr2_AM_Nbotu"
  ),
  "output/krona/Euk_to_AM_filtering_Nbotu.html"
)
```


# NUMBER OF SPORES ANALYSES

```{r}
psm_otu <- psmelt(as_binary_otu_table(d_spores)) |>
  filter(Abundance > 0) |>
  group_by(Sample) |>
  summarise(
    "Abundance" = sum(Abundance),
    "region" = region[1],
    "nb_spores" = nb_spores[1]
  )
```

```{r}
psm_res <- psmelt_samples_pq(d_spores) %>% 
  mutate(nb_spores_log10 = log10(nb_spores))
```

### Spores count <-> Alpha diversity

```{r}
# Fig S2
psm_res_rarefied <- psmelt_samples_pq(rarefy_even_depth(d_spores, rngseed = 221013)) %>% mutate(nb_spores_log10 = log10(nb_spores))

ggstatsplot::ggscatterstats(psm_res_rarefied, nb_spores_log10, Abundance, type = "non-parametric") +
  ggstatsplot::ggscatterstats(psm_res_rarefied, nb_spores_log10, Hill_0, type = "non-parametric") +
  ggstatsplot::ggscatterstats(psm_res_rarefied, nb_spores_log10, Hill_1, type = "non-parametric") +
  ggstatsplot::ggscatterstats(psm_res_rarefied, nb_spores_log10, Hill_2, type = "non-parametric")
```

### Spores count <-> Practice

```{r}
# Figure S5
ggstatsplot::ggbetweenstats(psm_res, practice, nb_spores_log10, type = "non-parametric") 
```

### Spores count <-> Terroir

```{r}
# Figure S4
ggstatsplot::ggbetweenstats(
  mutate(psm_res,
    terroir = reorder(psm_res$terroir, psm_res$nb_spores)
  ),
  terroir,
  nb_spores_log10,
  type = "non-parametric",
  centrality.plotting = F,
  package = "ggthemes",
  palette = "stata_economist"
) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
```

### Spores count <-> Mycorrhization rate

```{r}
ggstatsplot::ggscatterstats(psm_res_rarefied, nb_spores_log10, Myc_freq, type = "non-parametric") +
  ggstatsplot::ggscatterstats(psm_res_rarefied, nb_spores_log10, Myc_intensity_colonization, type = "non-parametric") +
  ggstatsplot::ggscatterstats(psm_res_rarefied, nb_spores_log10, Arbuscul_abundance, type = "non-parametric")
```


# MYCORRHIZATION MEASURE

## Mycorrhization rate <-> Alpha diversity

### F = Myc_freq

```{r}
psm_res <- psmelt_samples_pq(d_rs)
psm_res_rarefied <- psmelt_samples_pq(rarefy_even_depth(d_rs, rngseed = 221013))

# Figure S3a
(ggstatsplot::ggscatterstats(psm_res, Myc_freq, Hill_0, type = "non-parametrique") +
  ggstatsplot::ggscatterstats(psm_res, Myc_freq, Hill_1, type = "non-parametrique") +
  ggstatsplot::ggscatterstats(psm_res, Myc_freq, Hill_2, type = "non-parametrique")) /
  (ggstatsplot::ggscatterstats(psm_res_rarefied, Myc_freq, Hill_0, type = "non-parametrique") +
    ggstatsplot::ggscatterstats(psm_res_rarefied, Myc_freq, Hill_1, type = "non-parametrique") +
    ggstatsplot::ggscatterstats(psm_res_rarefied, Myc_freq, Hill_2, type = "non-parametrique"))
```

### M = Myc_intensity_colonization

```{r}
# Figure S3b
(ggstatsplot::ggscatterstats(psm_res, Myc_intensity_colonization, Hill_0, type = "non-parametrique") +
  ggstatsplot::ggscatterstats(psm_res, Myc_intensity_colonization, Hill_1, type = "non-parametrique") +
  ggstatsplot::ggscatterstats(psm_res, Myc_intensity_colonization, Hill_2, type = "non-parametrique")) /
  (ggstatsplot::ggscatterstats(psm_res_rarefied, Myc_intensity_colonization, Hill_0, type = "non-parametrique") +
    ggstatsplot::ggscatterstats(psm_res_rarefied, Myc_intensity_colonization, Hill_1, type = "non-parametrique") +
    ggstatsplot::ggscatterstats(psm_res_rarefied, Myc_intensity_colonization, Hill_2, type = "non-parametrique"))
```

### A = Arbuscul_abundance

```{r}
# Figure S3c
(ggstatsplot::ggscatterstats(psm_res, Arbuscul_abundance, Hill_0, type = "non-parametrique") +
  ggstatsplot::ggscatterstats(psm_res, Arbuscul_abundance, Hill_1, type = "non-parametrique") +
  ggstatsplot::ggscatterstats(psm_res, Arbuscul_abundance, Hill_2, type = "non-parametrique")) /
  (ggstatsplot::ggscatterstats(psm_res_rarefied, Arbuscul_abundance, Hill_0, type = "non-parametrique") +
    ggstatsplot::ggscatterstats(psm_res_rarefied, Arbuscul_abundance, Hill_1, type = "non-parametrique") +
    ggstatsplot::ggscatterstats(psm_res_rarefied, Arbuscul_abundance, Hill_2, type = "non-parametrique"))
```

## Mycorrhization rate <-> terroir

```{r}
ggstatsplot::ggbetweenstats(psm_res_rarefied, terroir, Myc_freq, type = "non-parametrique", centrality.plotting = F) +
  ggstatsplot::ggbetweenstats(psm_res_rarefied, terroir, Myc_intensity_colonization, type = "non-parametrique", centrality.plotting = F) +
  ggstatsplot::ggbetweenstats(psm_res_rarefied, terroir, Arbuscul_abundance, type = "non-parametrique", centrality.plotting = F)
```

## Mycorrhization rate <-> practice

```{r}
ggstatsplot::ggbetweenstats(psm_res_rarefied, practice, Myc_freq, type = "non-parametrique", centrality.plotting = F) +
  ggstatsplot::ggbetweenstats(psm_res_rarefied, practice, Myc_intensity_colonization, type = "non-parametrique", centrality.plotting = F) +
  ggstatsplot::ggbetweenstats(psm_res_rarefied, practice, Arbuscul_abundance, type = "non-parametrique", centrality.plotting = F)
```


# ECOLOGICAL ANALYSES : ALPHA DIVERSITY

## Compartment

```{r}
psm_res <- psmelt_samples_pq(d_muco)
psm_res_rarefied <- psmelt_samples_pq(rarefy_even_depth(d_muco, rngseed = 221013))
```

```{r}
ggstatsplot::ggbetweenstats(psm_res_rarefied,
  compartment,
  Hill_0,
  type = "non-parametrique"
) +
  ggstatsplot::ggbetweenstats(psm_res_rarefied,
    compartment,
    Hill_1,
    type = "non-parametrique"
  ) +
  ggstatsplot::ggbetweenstats(psm_res_rarefied,
    compartment,
    Hill_2,
    type = "non-parametrique"
  )
```

```{r}
ggplot(psm_res_rarefied, aes(y=Hill_0, x=compartment, color=practice))+
  geom_point() + 
  geom_line(aes(group = paired_name)) +
  facet_wrap(~terroir)
```


## Terroir

```{r}
psm_res <- psmelt_samples_pq(d_rs)
psm_res_rarefied <- psmelt_samples_pq(rarefy_even_depth(d_rs, rngseed = 221013))
```

```{r}
# Figure 4
 (ggstatsplot::ggbetweenstats(
    mutate(
      psm_res_rarefied,
      terroir = reorder(psm_res_rarefied$terroir, psm_res_rarefied$Hill_0)
    ),
    terroir,
    Hill_0,
    type = "non-parametrique",
    centrality.plotting = F,
    package = "ggthemes",
    palette = "stata_economist",
    point.args = list(position = ggplot2::position_jitterdodge(dodge.width = 0.6), alpha =
    0.9, size = 3, stroke = 0, na.rm = TRUE),
    violin.args = list(width = 0, linewidth = 0)
  )+ 
  scale_color_manual(values=c("#5660d0","#de8a00","#b59e00","#00773d","#fcb709",
                             "#e15968","#784b43","#c200ab","#00b3f0","#953726",
                             "#e09199","#379d30","#ed5019","#ff63b0") [match( levels(as.factor(reorder(psm_res_rarefied$terroir, psm_res_rarefied$Hill_0))),levels(as.factor(psm_res_rarefied$terroir)))])  + coord_flip()) /
 (ggstatsplot::ggbetweenstats(
    mutate(
      psm_res_rarefied,
      terroir = reorder(psm_res_rarefied$terroir, psm_res_rarefied$Hill_1)
    ),
    terroir,
    Hill_1,
    type = "non-parametrique",
    centrality.plotting = F,
    package = "ggthemes",
    palette = "stata_economist",
    point.args = list(position = ggplot2::position_jitterdodge(dodge.width = 0.6), alpha =
    0.9, size = 3, stroke = 0, na.rm = TRUE),
    violin.args = list(width = 0, linewidth = 0)
  )+ 
  scale_color_manual(values=c("#5660d0","#de8a00","#b59e00","#00773d","#fcb709",
                             "#e15968","#784b43","#c200ab","#00b3f0","#953726",
                             "#e09199","#379d30","#ed5019","#ff63b0") [match( levels(as.factor(reorder(psm_res_rarefied$terroir, psm_res_rarefied$Hill_1))),levels(as.factor(psm_res_rarefied$terroir)))])  + coord_flip()) /
 (ggstatsplot::ggbetweenstats(
    mutate(
      psm_res_rarefied,
      terroir = reorder(psm_res_rarefied$terroir, psm_res_rarefied$Hill_2)
    ),
    terroir,
    Hill_2,
    type = "non-parametrique",
    centrality.plotting = F,
    package = "ggthemes",
    palette = "stata_economist",
    point.args = list(position = ggplot2::position_jitterdodge(dodge.width = 0.6), alpha =
    0.9, size = 3, stroke = 0, na.rm = TRUE),
    violin.args = list(width = 0, linewidth = 0)
  )+ 
  scale_color_manual(values=c("#5660d0","#de8a00","#b59e00","#00773d","#fcb709",
                             "#e15968","#784b43","#c200ab","#00b3f0","#953726",
                             "#e09199","#379d30","#ed5019","#ff63b0") [match( levels(as.factor(reorder(psm_res_rarefied$terroir, psm_res_rarefied$Hill_2))),levels(as.factor(psm_res_rarefied$terroir)))])  + coord_flip()) + plot_layout(axes = "collect")
```


```{r}
# Figure S10
 (ggstatsplot::ggbetweenstats(
    mutate(
      psm_res,
      terroir = reorder(psm_res$terroir, psm_res$Hill_0)
    ),
    terroir,
    Hill_0,
    type = "non-parametrique",
    centrality.plotting = F,
    package = "ggthemes",
    palette = "stata_economist",
    point.args = list(position = ggplot2::position_jitterdodge(dodge.width = 0.6), alpha =
    0.9, size = 3, stroke = 0, na.rm = TRUE),
    violin.args = list(width = 0, linewidth = 0)
  )+ 
  scale_color_manual(values=c("#5660d0","#de8a00","#b59e00","#00773d","#fcb709",
                             "#e15968","#784b43","#c200ab","#00b3f0","#953726",
                             "#e09199","#379d30","#ed5019","#ff63b0") [match( levels(as.factor(reorder(psm_res$terroir, psm_res$Hill_0))),levels(as.factor(psm_res$terroir)))])  + coord_flip()) /
 (ggstatsplot::ggbetweenstats(
    mutate(
      psm_res,
      terroir = reorder(psm_res$terroir, psm_res$Hill_1)
    ),
    terroir,
    Hill_1,
    type = "non-parametrique",
    centrality.plotting = F,
    package = "ggthemes",
    palette = "stata_economist",
    point.args = list(position = ggplot2::position_jitterdodge(dodge.width = 0.6), alpha =
    0.9, size = 3, stroke = 0, na.rm = TRUE),
    violin.args = list(width = 0, linewidth = 0)
  )+ 
  scale_color_manual(values=c("#5660d0","#de8a00","#b59e00","#00773d","#fcb709",
                             "#e15968","#784b43","#c200ab","#00b3f0","#953726",
                             "#e09199","#379d30","#ed5019","#ff63b0") [match( levels(as.factor(reorder(psm_res$terroir, psm_res$Hill_1))),levels(as.factor(psm_res$terroir)))])  + coord_flip()) /
 (ggstatsplot::ggbetweenstats(
    mutate(
      psm_res,
      terroir = reorder(psm_res$terroir, psm_res$Hill_2)
    ),
    terroir,
    Hill_2,
    type = "non-parametrique",
    centrality.plotting = F,
    package = "ggthemes",
    palette = "stata_economist",
    point.args = list(position = ggplot2::position_jitterdodge(dodge.width = 0.6), alpha =
    0.9, size = 3, stroke = 0, na.rm = TRUE),
    violin.args = list(width = 0, linewidth = 0)
  )+ 
  scale_color_manual(values=c("#5660d0","#de8a00","#b59e00","#00773d","#fcb709",
                             "#e15968","#784b43","#c200ab","#00b3f0","#953726",
                             "#e09199","#379d30","#ed5019","#ff63b0") [match( levels(as.factor(reorder(psm_res$terroir, psm_res$Hill_2))),levels(as.factor(psm_res$terroir)))])  + coord_flip()) + plot_layout(axes = "collect")
```


```{r}
# Fig_7a
p_accu_balanced_mod_terroir <- 
  MiscMetabar::accu_plot_balanced_modality(d_rs,
                                           "terroir", 
                                           nperm = 999, 
                                           step = 300,
                                           quantile_prob=0.9,
                                           sample.size = 10000,
                                           progress_bar = FALSE)

p_accu_balanced_mod_terroir +
  xlab("Number of sequences") + 
  ylab("Number of OTUs") + 
  ggrepel::geom_label_repel(data=summarise(group_by(p_accu_balanced_mod_terroir$data,factor) ,y=max(X1,na.rm = T)),aes(label=factor,y=y,x=max(p_accu_balanced_mod_terroir$data$x,na.rm = T)), max.overlaps = 1900, force = 20) + xlim(c(1,25000)) + theme(legend.position = "none" )
```

## Practice

```{r}
# Figure 5
ggstatsplot::ggbetweenstats(psm_res_rarefied,
  practice,
  Hill_0,
  centrality.plotting = F,
  type = "non-parametrique"
) + ylab("Hill 0 (richness)") +
  ggstatsplot::ggbetweenstats(psm_res_rarefied,
    practice,
    Hill_1,
    centrality.plotting = F,
    type = "non-parametrique"
  ) + ylab("Hill 1 (~Shannon)") +
  ggstatsplot::ggbetweenstats(psm_res_rarefied,
    practice,
    Hill_2,
    centrality.plotting = F,
    type = "non-parametrique"
  ) + ylab("Hill 2 (~Simpson)") +  plot_layout(axes = "collect")
```

```{r}
# Figure S11
ggstatsplot::ggbetweenstats(psm_res,
  practice,
  Hill_0,
  centrality.plotting = F,
  type = "non-parametrique"
) +
  ggstatsplot::ggbetweenstats(psm_res,
    practice,
    Hill_1,
    centrality.plotting = F,
    type = "non-parametrique"
  ) +
  ggstatsplot::ggbetweenstats(psm_res,
    practice,
    Hill_2,
    centrality.plotting = F,
    type = "non-parametrique"
  )
```


```{r}
# Fig_7b
p_accu_balanced_mod <- 
  MiscMetabar::accu_plot_balanced_modality(d_rs,
                                           "practice", 
                                           nperm = 999, 
                                           step = 300,
                                           quantile_prob=0.90,
                                           progress_bar = FALSE)

p_accu_balanced_mod +
  xlab("Number of sequences") +
  ylab("Number of OTUs") + 
  ggrepel::geom_label_repel(data=summarise(group_by(p_accu_balanced_mod$data,factor) ,y=max(X1,na.rm = T)),aes(label=factor,y=y,x=max(p_accu_balanced_mod$data$x,na.rm = T)), max.overlaps = 1900, force = 20) + xlim(c(1,18000)) + theme(legend.position = "none" )
```


## ZOOM ON LOW-DIVERSITY SAMPLES

```{r}
otu_hill <- vegan::renyi(d_rs@otu_table, scale = c(0, 1, 2), hill = TRUE)

low_div_samples <-
  rownames(otu_hill[otu_hill$`0` < 10 |
    otu_hill$`1` < 2 |
    otu_hill$`2` < 2, ])

low_div_samples

sum(otu_hill$`0` < 10)
sum(otu_hill$`1` < 2)
sum(otu_hill$`2` < 2)
length(low_div_samples)
```

```{r}
low_div_samples_table <- tibble(cbind(as_tibble(d_rs@sam_data[low_div_samples, c("terroir", "practice", "rank", "inter_rank", "compartment")]), apply(otu_hill[low_div_samples, ], 2, round, digits = 2), sample_sums(d_rs)[low_div_samples]))

low_div_samples_table$compartment <- ifelse(is.na(low_div_samples_table$compartment), "Spores + Roots", "Spores")

colnames(low_div_samples_table) <- c("Terroir", "Global practice", "Rank practice", "Inter rank practice", "Compartment", "Hill 0 (richness)", "Hill 1 (~Shannon)", "Hill 2 (~Simpson)", "nb_seq")

low_div_samples_table <- arrange(low_div_samples_table, as.numeric(`Hill 0 (richness)`))

low_div_samples_table <-
  rbind(
    low_div_samples_table,
    c(
      "",
      "",
      "",
      "MEAN",
      "(low -diversity samples)",
      round(mean(low_div_samples_table$`Hill 0 (richness)`), 2),
      round(mean(low_div_samples_table$`Hill 1 (~Shannon)`), 2),
      round(mean(low_div_samples_table$`Hill 2 (~Simpson)`), 2),
      round(mean(low_div_samples_table$nb_seq), 2)
    ),
    c(
      "",
      "",
      "",
      "MEAN",
      "(all samples)",
      round(mean(otu_hill$`0`), 2),
      round(mean(otu_hill$`1`), 2),
      round(mean(otu_hill$`2`), 2),
      round(mean(sample_sums(d_rs)), 2)
    ),
     c(
      "",
      "",
      "",
      "MAX",
      "(all samples)",
      round(max(otu_hill$`0`), 2),
      round(max(otu_hill$`1`), 2),
      round(max(otu_hill$`2`), 2),
      round(max(sample_sums(d_rs)), 2)
    )
  )

# Table 3
kbl(low_div_samples_table) |>
  kable_classic(full_width = F, html_font = "Cambria")
```


# ECOLOGICAL ANALYSES : BETA DIVERSITY

## Compartment

```{r}
# Figure S9
p <- phyloseq::plot_ordination(d_muco,
  vegan::decorana(vegdist(as(otu_table(d_muco), "matrix"),
    method = "robust.aitchison"
  )),
  color = "region",
  shape = "compartment"
) +
  geom_point(size = 3) +
  stat_ellipse(inherit.aes = F, aes(x = DCA1, y = DCA2, linetype = compartment))

p + geom_line(data = p$data, aes(group = paired_name))
```


## Practice and terroir

```{r}
p <-
  phyloseq::plot_ordination(d_rs,
    ordinate(d_rs,
      method = "NMDS",
      distance = "bray"
    ),
    color = "terroir",
    shape = "practice"
  ) + facet_wrap("region") + scale_shape_manual(values=c(25,23,24))

p_nmds <- p + geom_point(
  data = select(p$data, -c(region)),
  fill = "grey40",
  color = "grey20",
  size = 1,
  alpha = 0.5
) +
  geom_point(size = 3, aes(fill=terroir)) +
  ggtitle("NMDS on bray distance") + 
  scale_fill_manual(values=c("#5660d0","#de8a00","#b59e00","#00773d","#fcb709",
                             "#e15968","#784b43","#c200ab","#00b3f0","#953726",
                             "#e09199","#379d30","#ed5019","#ff63b0")) +
  scale_color_manual(values=rep("grey20",14))
# Figure 9
p_nmds
```

```{r}
# Figure 6a
upset_pq(d_rs, "practice", taxa_fill = "Family",
         set_sizes=(
        upset_set_size()
         + geom_text(aes(label=after_stat(count)), hjust=-0.3, color="white", stat='count')
    ))
ggvenn_pq(d_rs, "practice")

# Figure 6b
upset_pq(d_rs, "terroir", taxa_fill = "Family", min_size = 2,  height_ratio = 0.6
 ,set_sizes=(
        upset_set_size()
         + geom_label(aes(label=after_stat(count)), hjust=-0.3, size=2.5,  stat='count')
    ))
```

## Global beta-div analysis

### Spatial data

```{r}
library(geodist)
lat_lon <- as_tibble(d_rs@sam_data[, c("lat", "long")])
lat_lon$lat <- as.numeric(lat_lon$lat)
lat_lon$long <- as.numeric(lat_lon$long)
dist_spatial_meter <- as.dist(geodist(lat_lon, measure = "geodesic"),
  upper = FALSE
)
```

```{r}
lon_lat_rs <- d_rs@sam_data[, c("long", "lat")]
lon_lat_rs$long <- as.numeric(lon_lat_rs$long)
lon_lat_rs$lat <- as.numeric(lon_lat_rs$lat)
MEM <- dbmem(lon_lat_rs, MEM.autocor = "non-null")
```

```{r}
test_MEM <- moran.randtest(MEM, nrepet = 999)
test_MEM$pvalue_adjust <- p.adjust(test_MEM$pvalue, method = "BH")
```

```{r}
d_rs@sam_data$MEM_1 <- MEM[, 1]
d_rs@sam_data$MEM_2 <- MEM[, 2]
res_ado_spatial_robAit <- adonis_pq(
  d_rs,
  "MEM_1 + MEM_2 + practice + inter_rank + rank  + terroir",
  correction_for_sample_size = TRUE,
  dist_method = "robust.aitchison"
)

res_ado_spatial_robAit_rarefy <- adonis_pq(
  rarefy_even_depth(d_rs, rngseed = 626),
  "MEM_1 + MEM_2 + practice + inter_rank + rank  + terroir",
  correction_for_sample_size = FALSE,
  dist_method = "robust.aitchison"
)

res_ado_spatial_bray <- adonis_pq(
  d_rs,
  "MEM_1 + MEM_2 + practice + inter_rank + rank  + terroir",
  correction_for_sample_size = TRUE,
  dist_method = "bray"
)


res_ado_spatial_bray_rarefy <- adonis_pq(
  rarefy_even_depth(d_rs, rngseed = 626),
  "MEM_1 + MEM_2 + practice + inter_rank + rank  + terroir",
  correction_for_sample_size = FALSE,
  dist_method = "bray"
)

df <- data.frame(res_ado_spatial_bray)
df$names <-
  factor(
    rownames(df),
    levels = c(
      "sample_size",
      "MEM_1",
      "MEM_2",
      "practice",
      "inter_rank",
      "rank",
      "terroir",
      "Residual",
      "Total"
    )
  )
df <- df %>% filter(!names == "Total")
p1 <-
  ggplot(df, aes(y = R2 / Df, x = names, fill = R2 / Df)) +
  geom_bar(stat = "identity") +
  scale_fill_viridis_c() +
  geom_text(
    label = case_when(
      df$Pr..F. < 0.001 ~ "***",
      df$Pr..F. < 0.01 ~ "**",
      df$Pr..F. < 0.05 ~ "*",
      df$Pr..F. > 0.05 ~ "ns"
    ),
    nudge_y = 0.01
  ) +
  ggtitle("Permanova on Bray")

df <- data.frame(res_ado_spatial_robAit)
df$names <-
  factor(
    rownames(df),
    levels = c(
      "MEM_1",
      "MEM_2",
      "practice",
      "inter_rank",
      "rank",
      "terroir",
      "Residual",
      "Total"
    )
  )
df <- df %>% filter(!names == "Total")
p2 <-
  ggplot(df, aes(y = R2 / Df, x = names, fill = R2 / Df)) +
  geom_bar(stat = "identity") +
  scale_fill_viridis_c() +
  geom_text(
    label = case_when(
      df$Pr..F. < 0.001 ~ "***",
      df$Pr..F. < 0.01 ~ "**",
      df$Pr..F. < 0.05 ~ "*",
      df$Pr..F. > 0.05 ~ "ns"
    ),
    nudge_y = 0.01
  ) +
  ggtitle("Permanova on robust Aitchison")

df <- data.frame(res_ado_spatial_bray_rarefy)
df$names <-
  factor(
    rownames(df),
    levels = c(
      "MEM_1",
      "MEM_2",
      "practice",
      "inter_rank",
      "rank",
      "terroir",
      "Residual",
      "Total"
    )
  )
df <- df %>% filter(!names == "Total")

p3 <-
  ggplot(df, aes(y = R2 / Df, x = names, fill = R2 / Df)) +
  geom_bar(stat = "identity") +
  scale_fill_viridis_c() +
  geom_text(
    label = case_when(
      df$Pr..F. < 0.001 ~ "***",
      df$Pr..F. < 0.01 ~ "**",
      df$Pr..F. < 0.05 ~ "*",
      df$Pr..F. > 0.05 ~ "ns"
    ),
    nudge_y = 0.01
  ) +
  ggtitle("Permanova on Bray after rarefaction")

df <- data.frame(res_ado_spatial_robAit_rarefy)
df$names <-
  factor(
    rownames(df),
    levels = c(
      "MEM_1",
      "MEM_2",
      "practice",
      "inter_rank",
      "rank",
      "terroir",
      "Residual",
      "Total"
    )
  )
df <- df %>% filter(!names == "Total")
p4 <-
  ggplot(df, aes(y = R2 / Df, x = names, fill = R2 / Df)) +
  geom_bar(stat = "identity") +
  scale_fill_viridis_c() +
  geom_text(
    label = case_when(
      df$Pr..F. < 0.001 ~ "***",
      df$Pr..F. < 0.01 ~ "**",
      df$Pr..F. < 0.05 ~ "*",
      df$Pr..F. > 0.05 ~ "ns"
    ),
    nudge_y = 0.01
  ) +
  ggtitle("Permanova on robust Aitchison after rarefaction")

(p1 + ylim(0, 0.12) + p2 + ylim(0, 0.12)) /
  (p3 + ylim(0, 0.12) + p4 + ylim(0, 0.12))
```

```{r}
anova(vegan::betadisper(phyloseq::distance(d_rs@otu_table, "bray"), d_rs@sam_data$terroir))
anova(vegan::betadisper(phyloseq::distance(d_rs@otu_table, "bray"), d_rs@sam_data$practice))
anova(vegan::betadisper(phyloseq::distance(d_rs@otu_table, "bray"), rarefy_even_depth(d_rs, rngseed = 626)@sam_data$terroir))
anova(vegan::betadisper(phyloseq::distance(d_rs@otu_table, "bray"), rarefy_even_depth(d_rs, rngseed = 626)@sam_data$practice))
anova(vegan::betadisper(vegdist(d_rs@otu_table, "robust.aitchison"), d_rs@sam_data$terroir))
anova(vegan::betadisper(vegdist(d_rs@otu_table, "robust.aitchison"), d_rs@sam_data$practice))
anova(vegan::betadisper(vegdist(d_rs@otu_table, "robust.aitchison"), rarefy_even_depth(d_rs, rngseed = 626)@sam_data$terroir))
anova(vegan::betadisper(vegdist(d_rs@otu_table, "robust.aitchison"), rarefy_even_depth(d_rs, rngseed = 626)@sam_data$practice))
```


### Soil properties

```{r}
soil_prop <- as_tibble(d_rs@sam_data) |>
  select(paired_name, practice, organic, terroir, Coarse_sand:CEC)
soil_prop_num <- soil_prop |>
  select(-all_of(c("practice", "organic", "terroir", "CaO", "Total_sand", "Total_filt"))) |>
  tibble::column_to_rownames("paired_name") |>
  mutate(across(everything(), as.numeric)) |>
  tidyr::drop_na()
```

```{r}
pca_test_res <- PCAtest::PCAtest(soil_prop_num, varcorr = T, plot = F, counter = F)

pval <- c()
for (i in seq_len(length(pca_test_res$`Percentage of variation of empirical PC's`))) {
  obs <- pca_test_res$`Percentage of variation of empirical PC's`[i]
  null_model <- pca_test_res$`Percentage of variation of randomized data`[, i]

  pval[i] <- (sum(obs < null_model) + 1) / (1 + nrow(pca_test_res$`Percentage of variation of randomized data`))
}

pca_test_pval_adj <- p.adjust(pval, method = "BH")
pca_test_pval_adj
```

```{r}
res_pca <- dudi.pca(soil_prop_num, scannf = F, nf = 4)
```

```{r}
p_pca_variable <- fviz_pca_var(res_pca,
  col.var = "cos2",
  gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
  repel = TRUE
)

p_pca_variable_axe3_4 <- fviz_pca_var(res_pca,
  col.var = "cos2", axes = c(3, 4),
  gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
  repel = TRUE
)

res_pca_var <- get_pca_var(res_pca)

# Fig. 2
(p_pca_variable + p_pca_variable_axe3_4) / free((factoextra::fviz_eig(res_pca)) +
  (ggcorrplot::ggcorrplot(res_pca_var$cor)))
```

```{r}
practice <- unlist(lapply(strsplit(rownames(res_pca$tab), "--"), function(x) {
  x[5]
}))

terroir <- unlist(lapply(strsplit(rownames(res_pca$tab), "--"), function(x) {
  x[2]
}))

p_pca_ind_terroir <- fviz_pca_ind(res_pca,
  habillage = terroir,
  label = FALSE,
  repel = TRUE,
  mean.point = FALSE,
  addEllipses = TRUE,
  pointsize = 3,
  ellipse.type = "convex"
) +
  scale_shape_manual(values = rep(16, length(unique(terroir))))

p_pca_ind_terroir$data$terroir <- terroir
p_pca_ind_terroir$data$practice <- practice

p_pca_ind_terroir_practice <- p_pca_ind_terroir + geom_point(aes(x = x, y = y),
  shape = case_when(
    practice == "Organic" ~ 2,
    practice == "Conventional" ~ 6,
    practice == "Conversion" ~ 5
  ), size = 3.5,
  color = rgb(0, 0, 0, 0.7)
)


# value
kw1_terroir <- kruskal.test(res_pca$tab[, 1], terroir)
kw2_terroir <- kruskal.test(res_pca$tab[, 2], terroir)
kw3_terroir <- kruskal.test(res_pca$tab[, 3], terroir)

kw1_practice <- kruskal.test(res_pca$tab[, 1], practice)
kw2_practice <- kruskal.test(res_pca$tab[, 2], practice)
kw3_practice <- kruskal.test(res_pca$tab[, 3], practice)

# Figure 3
p_pca_ind_terroir_practice + 
  annotate("text", x = 2, y = 4.5, label = paste("Kruskal-Wallis (axe1 - terroir): pval=", round(as.numeric(kw1_terroir$p.value),4)), size = 3) + 
  annotate("text", x = 2, y = 4.25, label = paste("Kruskal-Wallis (axe2 - terroir): pval=", round(as.numeric(kw2_terroir$p.value),4)), size = 3) + 
  annotate("text", x = 2, y = 4, label = paste("Kruskal-Wallis (axe3 - terroir): pval=", round(as.numeric(kw3_terroir$p.value),4)), size = 3) + 
  annotate("text", x = -2, y = 4.5, label = paste("Kruskal-Wallis (axe1 - practice): pval=", round(as.numeric(kw1_practice$p.value),4)), size = 3) + 
  annotate("text", x = -2, y = 4.25, label = paste("Kruskal-Wallis (axe2 - practice): pval=", round(as.numeric(kw2_practice$p.value),4)), size = 3) + 
  annotate("text", x = -2, y = 4, label = paste("Kruskal-Wallis (axe3 - practice): pval=", round(as.numeric(kw3_practice$p.value),4)), size = 3)
```


```{r}
# Figure S1
ggplot(d_rs@sam_data, aes(x = practice, y = as.numeric(Cu), fill = practice)) +
  geom_violin() +
  geom_jitter()
kruskal.test(as.numeric(d_rs@sam_data$Cu), d_rs@sam_data$practice)
```

```{r}
d_with_pca <-
  clean_pq(subset_samples_pq(d_rs, d_rs@sam_data$paired_name %in% rownames(soil_prop_num)))

res_pca_ind <- get_pca_ind(res_pca)

if (!identical(match(rownames(res_pca_ind$coord), d_with_pca@sam_data$paired_name), sort(match(rownames(res_pca_ind$coord), d_with_pca@sam_data$paired_name)))) {
  stop("ERROR")
}

d_with_pca <- add_info_to_sam_data(d_with_pca, res_pca_ind$coord)
```

```{r}
dim_df <- as_tibble(d_with_pca@sam_data) |>
  select(c(starts_with("Dim"), "nb_seq", "nb_otu"))

cor_results <- correlation::correlation(dim_df)
cor_results %>%
  summary(redundant = TRUE) %>%
  plot()
```

```{r}
lon_lat_with_pca <- d_with_pca@sam_data[, c("long", "lat")]
lon_lat_with_pca$long <- as.numeric(lon_lat_with_pca$long)
lon_lat_with_pca$lat <- as.numeric(lon_lat_with_pca$lat)
MEM_with_pca <- dbmem(lon_lat_with_pca, MEM.autocor = "non-null")

d_with_pca@sam_data$MEM_1 <- MEM_with_pca[, 1]
d_with_pca@sam_data$MEM_2 <- MEM_with_pca[, 2]
```

```{r}
res_ado_spatial_soil_bray <-
  adonis_pq(
    d_with_pca,
    "MEM_1 + MEM_2 + Dim.1 + Dim.2 + Dim.3 + practice + inter_rank + rank + terroir",
    correction_for_sample_size = TRUE
  )
res_ado_spatial_soil_robAit <-
  adonis_pq(
    d_with_pca,
    "MEM_1 + MEM_2 + Dim.1 + Dim.2 + Dim.3 + practice + inter_rank + rank + terroir",
    correction_for_sample_size = TRUE,
    dist_method = "robust.aitchison"
  )

res_ado_spatial_soil_bray_rarefy <-
  adonis_pq(
    rarefy_even_depth(d_with_pca, rngseed = 626),
    "MEM_1 + MEM_2 + Dim.1 + Dim.2 + Dim.3 + practice + inter_rank + rank + terroir",
    correction_for_sample_size = FALSE
  )
res_ado_spatial_soil_robAit_rarefy <-
  adonis_pq(
    rarefy_even_depth(d_with_pca, rngseed = 626),
    "MEM_1 + MEM_2 + Dim.1 + Dim.2 + Dim.3 + practice + inter_rank + rank + terroir",
    correction_for_sample_size = FALSE,
    dist_method = "robust.aitchison"
  )

anova(betadisper(phyloseq::distance(d_rs, method = "bray"), d_rs@sam_data$practice))
anova(betadisper(phyloseq::distance(d_rs, method = "bray"), d_rs@sam_data$terroir))
anova(vegan::betadisper(vegdist(d_rs@otu_table, "robust.aitchison"), d_rs@sam_data$practice))
anova(vegan::betadisper(vegdist(d_rs@otu_table, "robust.aitchison"), d_rs@sam_data$terroir))
```


```{r}
# TABLE 2
kbl(res_ado_spatial_bray) |>
  kable_classic(full_width = F, html_font = "Cambria")
kbl(res_ado_spatial_soil_bray) |>
  kable_classic(full_width = F, html_font = "Cambria")
```

```{r}
# TABLE S2
kbl(res_ado_spatial_bray_rarefy) |>
  kable_classic(full_width = F, html_font = "Cambria")
# TABLE S3
kbl(res_ado_spatial_soil_bray_rarefy) |>
  kable_classic(full_width = F, html_font = "Cambria")
```

```{r}
# TABLE S4
kbl(res_ado_spatial_robAit_rarefy) |>
  kable_classic(full_width = F, html_font = "Cambria")
# TABLE S5
kbl(res_ado_spatial_soil_robAit_rarefy) |>
  kable_classic(full_width = F, html_font = "Cambria")
```

### Variance partitionning

```{r}
# Figure 8a
res_varpart_rarefy <- var_par_rarperm_pq(
  physeq = d_with_pca,
  list_component = list(
    "Spatial" = c("MEM_1", "MEM_2"),
    "Soil" = c("Dim.1", "Dim.2", "Dim.3"),
    "Practice" = c("practice", "inter_rank", "rank"),
    "Terroir" = c("terroir")
  ),
  nperm = 99,
  dbrda_computation = TRUE,
  progress_bar = FALSE
)
plot_var_part_pq(res_varpart_rarefy, show_quantiles = FALSE, filter_quantile_zero = TRUE, show_dbrda_signif = F,digits = 2)
```

```{r}
# Figure 8b
res_varpart_rarefy_wo_soil <- var_par_rarperm_pq(
  physeq = d_rs,
  list_component = list(
    "Spatial" = c("MEM_1", "MEM_2"),
    "Practice" = c("practice", "inter_rank", "rank"),
    "Terroir" = c("terroir")
  ),
  nperm = 99,
  dbrda_computation = TRUE,
  progress_bar = FALSE
)

plot_var_part_pq(res_varpart_rarefy_wo_soil, show_quantiles = FALSE, filter_quantile_zero = TRUE, show_dbrda_signif = F,digits = 2)
```


```{r}
res_varpart_robAit_rarefy <- var_par_rarperm_pq(
  physeq = d_with_pca,
  list_component = list(
    "Spatial" = c("MEM_1", "MEM_2"),
    "Soil" = c("Dim.1", "Dim.2", "Dim.3"),
    "Practice" = c("practice", "inter_rank", "rank"),
    "Terroir" = c("terroir")
  ),
  dist_method = "robust.aitchison",
  nperm = 99,
  progress_bar = FALSE
)
plot_var_part_pq(res_varpart_robAit_rarefy, show_quantiles = FALSE, filter_quantile_zero = TRUE, show_dbrda_signif = F,digits = 2)
```

```{r}
# Figure S12b
res_varpart_robAit_rarefy_wo_soil <- var_par_rarperm_pq(
  physeq = d_rs,
  list_component = list(
    "Spatial" = c("MEM_1", "MEM_2"),
    "Practice" = c("practice", "inter_rank", "rank"),
    "Terroir" = c("terroir")
  ),
    dist_method = "robust.aitchison",
  nperm = 99,
  dbrda_computation = TRUE,
  progress_bar = FALSE
)

plot_var_part_pq(res_varpart_robAit_rarefy_wo_soil, show_quantiles = FALSE, filter_quantile_zero = TRUE, show_dbrda_signif = F,digits = 2)
```


## Differential abundance analysis

### Indicspecies

#### Terroir

```{r}
# Figure 10 
res_mpt_terroir <-
  multipatt(as.matrix(d_rs@otu_table),
    d_rs@sam_data$terroir,
    control = how(nperm = 9999),
    max.order = 3
  )

res_mpt_terroir_df <- res_mpt_terroir$sign
res_mpt_terroir_df$p.adj <- p.adjust(res_mpt_terroir_df$p.value, method = "BH")
res_mpt_terroir_df$OTU_names <- rownames(res_mpt_terroir_df)
res_mpt_terroir_df_signif <-
  res_mpt_terroir_df %>%
  filter(p.adj < 0.05) %>%
  tidyr::pivot_longer(cols = starts_with("s."))

tax_tab <- as.data.frame(d_rs@tax_table)
tax_tab$otu <- rownames(tax_tab)

res_mpt_terroir_df_signif_taxo <- left_join(res_mpt_terroir_df_signif,tax_tab, by = join_by("OTU_names" == "otu"))

ggplot(
  res_mpt_terroir_df_signif_taxo,
  aes(
    x = OTU_names,
    y = name,
    alpha = value,
    color = Genus
  )
) +
  geom_point(size = 6) +
  theme(axis.text.x = element_text(
    angle = 90,
    vjust = 0.5,
    hjust = 1
  ))+
  scale_alpha(range = c(0, 1))
```

```{r}
res_mpt_terroir_rg <-
  multipatt(as.matrix(rarefy_even_depth(d_rs, rngseed = 626)@otu_table),
    d_rs@sam_data$terroir,
    control = how(nperm = 9999),
    max.order = 3,
    func = "r.g"
  )

res_mpt_terroir_rg_df <- res_mpt_terroir_rg$sign
res_mpt_terroir_rg_df$p.adj <- p.adjust(res_mpt_terroir_rg_df$p.value, method = "BH")
res_mpt_terroir_rg_df$OTU_names <- rownames(res_mpt_terroir_rg_df)
res_mpt_terroir_rg_df_signif <-
  res_mpt_terroir_rg_df %>%
  filter(p.adj < 0.05) %>%
  tidyr::pivot_longer(cols = starts_with("s."))

ggplot(
  res_mpt_terroir_rg_df_signif,
  aes(
    x = OTU_names,
    y = name,
    alpha = value,
    color = stat
  )
) +
  geom_point(size = 4) +
  theme(axis.text.x = element_text(
    angle = 90,
    vjust = 0.5,
    hjust = 1
  ))
```

#### practice

```{r}
res_mpt_practice <-
  multipatt(as.matrix(d_rs@otu_table),
    d_rs@sam_data$practice,
    control = how(nperm = 9999),
    max.order = 3
  )

res_mpt_practice_df <- res_mpt_practice$sign
res_mpt_practice_df$p.adj <- p.adjust(res_mpt_practice_df$p.value, method = "BH")
res_mpt_practice_df$OTU_names <- rownames(res_mpt_practice_df)
res_mpt_practice_df_signif <-
  res_mpt_practice_df %>%
  filter(p.adj < 0.05) %>%
  tidyr::pivot_longer(cols = starts_with("s."))
res_mpt_practice_df_signif
```

```{r}
res_mpt_practice_rg <-
  multipatt(as.matrix(d_rs@otu_table),
    d_rs@sam_data$practice,
    control = how(nperm = 9999),
    max.order = 3,
    func = "r.g"
  )

res_mpt_practice_rg_df <- res_mpt_practice_rg$sign
res_mpt_practice_rg_df$p.adj <- p.adjust(res_mpt_practice_rg_df$p.value, method = "BH")
res_mpt_practice_rg_df$OTU_names <- rownames(res_mpt_practice_rg_df)
res_mpt_practice_rg_df_signif <-
  res_mpt_practice_rg_df %>%
  filter(p.adj < 0.05) %>%
  tidyr::pivot_longer(cols = starts_with("s."))

res_mpt_practice_rg_df_signif
```


# Session information

```{r}
sessionInfo()
```